If you want to count do the same POST but using _count


###########################   ELASTICSEARCH   ###############################
____________________________________________________________________________________________________
(_search) General example of a query with filter language:

{
  "query": {
    "filtered": {
      "query": {
        "match": {
          "text": {
            "query": "dna",
            "operator": "or"
          }
        }
      },
      "filter": {
        "term": {
          "lang": "en"
        }
      }
    }
  }
}

____________________________________________________________________________________________________
(_search) General query for searching by term only negatives in english

{
  "query": {
    "filtered": {
      "query": {
        "match": {
          "text": {
            "query": "lol",
            "operator": "or"
          }
        }
      },
      "filter": {
        "bool": {
          "must": [
            {
              "term": {
                "lang": "en"
              }
            },
            {
              "term": {
                "sentiment": "negative"
              }
            }
          ]
        }
      }
    }
  }
}

____________________________________________________________________________________________________
(_count) count total number of tweets containing a term

{
  "query": {
    "filtered": {
      "query": {
        "match": {
          "text": {
            "query": "lol",
            "operator": "or"
          }
        }
      },
      "filter": {
        "term": {
          "lang": "en"
        }
      }
    }
  }
}


____________________________________________________________________________________________________
QUERY TWEET WITHIN A BOUNDING BOX (RECTANGLE) BY ITS COORDINATES FIELD
(_search) #Search for tweets within a bounding box!
Note: consider coordinates taken from the bounding box tool, parameters are inverted (top/bottom)

{
  "query": {
    "filtered": {
      "query": {
        "match": {
          "text": {
            "query": "AFL",
            "operator": "or"
          }
        }
      },
      "filter": {
        "geo_bounding_box": {
          "coordinates.coordinates": {
            "bottom_right" : [144.78737955,-37.8517993483],
            "top_left" : [145.0881302824,-37.6009459269]
          }
        }
      }
    }
  }
}


____________________________________________________________________________________________________
QUERY TWEET WITHIN A POLYGON (SUBURB) BY ITS COORDINATES FIELD

{
  "query": {
    "filtered": {
      "query": {
        "match": {
          "text": {
            "query": "AFL",
            "operator": "or"
          }
        }
      },
      "filter": {
        "geo_polygon": {
          "coordinates.coordinates": {
            "points" : [[144.94886032, -37.768208105000014 ], [144.948876128, -37.768121007000012 ], [144.94896102399997, -37.7676062815 ], [144.94901184, -37.767298312000015 ], [144.94914144, -37.76651298700002 ], [144.949309568, -37.765497818000014 ], [144.9493776, -37.765062716500019 ], [144.94941984000005, -37.764792635000013 ], [144.94942908800005, -37.764678323500114 ], [144.949435904, -37.76459599850002 ], [144.949437728, -37.764573299000013 ], [144.94974048, -37.762768975500016 ], [144.9500285120001, -37.761053026500015 ], [144.950180064, -37.760169115000011 ], [144.95032620800006, -37.759315950500017 ], [144.95008483200004, -37.7592873865 ], [144.950156064, -37.758931761 ], [144.95030604800007, -37.758095376000014 ], [144.95043916800006, -37.757377872 ], [144.95065177599997, -37.7562328515 ], [144.95066128, -37.756196499 ], [144.95067395200005, -37.756160738500014 ], [144.950689696, -37.756125736500017 ], [144.95069872, -37.7561086055 ], [144.95071897600005, -37.756075120500014 ], [144.950730208, -37.756058822000014 ], [144.95074211200006, -37.756042838000013 ], [144.950768, -37.756011906000012 ], [144.950796544, -37.755982454 ], [144.950811776, -37.755968357 ], [144.95082758400005, -37.755954667 ], [144.950860992, -37.755928656 ], [144.950878528, -37.755916353500012 ], [144.950915136, -37.755893228500014 ], [144.95095369599997, -37.755872194000013 ], [144.95102387200006, -37.7558412805 ], [144.95119808000007, -37.7557802675 ], [144.951708864, -37.755620742000012 ], [144.95193433600005, -37.755548647500014 ], [144.95221913600005, -37.7554316535 ], [144.95273171200006, -37.755215277500014 ], [144.953201536, -37.755018900000017 ], [144.95327747200005, -37.7549780335 ], [144.95340131200007, -37.754897225499995 ], [144.95351219199998, -37.754805336000011 ], [144.95360832, -37.754704807 ], [144.95370912, -37.7545607105 ], [144.95383155200005, -37.754329516 ], [144.95386032, -37.754231576999992 ], [144.953974816, -37.754244989499995 ], [144.95481251200005, -37.7543434465 ], [144.95577584, -37.754456758999993 ], [144.95645984000007, -37.7545367715 ], [144.95674083200007, -37.754569775499995 ], [144.957521536, -37.754661868499994 ], [144.958225824, -37.7547447485 ], [144.95872723200006, -37.754803652499994 ], [144.959064832, -37.7548433165 ], [144.960096768, -37.754964732 ], [144.961542752, -37.755134710000014 ], [144.961736768, -37.7551574095 ], [144.962179936, -37.755209524 ], [144.963896768, -37.7554145410001 ], [144.96411744000005, -37.755456388000013 ], [144.964816768, -37.755540119 ], [144.96599519999998, -37.7556812185 ], [144.96737248000005, -37.755834639 ], [144.967527968, -37.755851992000011 ], [144.96812083200007, -37.755918037000015 ], [144.969414048, -37.7560621335 ], [144.970408096, -37.756172874500017 ], [144.971144576, -37.756254922000011 ], [144.97232940800006, -37.756386901 ], [144.973318336, -37.756497068499996 ], [144.973934656, -37.756565814500014 ], [144.974048768, -37.7565785055 ], [144.97486812799997, -37.756669765999995 ], [144.97611084800005, -37.756817285 ], [144.97661078399997, -37.756876651499994 ], [144.97698384, -37.756920958999913 ], [144.97662704, -37.759012088000013 ], [144.97575443199995, -37.758910245500019 ], [144.975135648, -37.758838021500011 ], [144.97513510399998, -37.758845144000013 ], [144.975100544, -37.758835320500019 ], [144.97451151999997, -37.758765224000015 ], [144.97396559999993, -37.758701251 ], [144.973910016, -37.759015991500014 ], [144.973889984, -37.759132005000012 ], [144.97387750399997, -37.759211259 ], [144.974086016, -37.759234994500012 ], [144.97408, -37.759276008999912 ], [144.97404601600005, -37.759466004 ], [144.973997632, -37.759747056000094 ], [144.97382591999997, -37.759727076 ], [144.973597344, -37.761002262500114 ], [144.97350867199998, -37.761102403 ], [144.973347136, -37.762034396000018 ], [144.973398592, -37.762040427 ], [144.97306812799997, -37.763875534500016 ], [144.972945376, -37.764558351000012 ], [144.97280931200007, -37.765328672500019 ], [144.972732256, -37.765765624000018 ], [144.97259219199998, -37.766559514500017 ], [144.97230745600007, -37.768136121500028 ], [144.97217331200005, -37.768879747500016 ], [144.971980928, -37.769946124500017 ], [144.971863552, -37.7705619895 ], [144.97171776, -37.771406015 ], [144.97165139199998, -37.771788077 ], [144.97162668800002, -37.771930342000019 ], [144.97150032, -37.772661240000012 ], [144.97138592, -37.773394062 ], [144.97127471999997, -37.7741038515001 ], [144.9712152, -37.774487615499986 ], [144.97114147200006, -37.774960290500012 ], [144.971133216, -37.775012849000028 ], [144.97101504, -37.775770109500016 ], [144.97104745600007, -37.7758696580001 ], [144.970952832, -37.776521912500016 ], [144.97092288000005, -37.776728705500012 ], [144.970848608, -37.777242228500015 ], [144.97069632, -37.778292011000012 ], [144.970590816, -37.778909078500014 ], [144.97052579199993, -37.7792891055 ], [144.969003008, -37.779108749000017 ], [144.968096768, -37.779238989000014 ], [144.96764195200007, -37.779318705500017 ], [144.967712672, -37.7789485575 ], [144.9672168000001, -37.7788886915 ], [144.96598656, -37.778740284500017 ], [144.965194208, -37.778644621 ], [144.963940896, -37.778493420500013 ], [144.96333587200004, -37.778420401 ], [144.962482144, -37.778317393000016 ], [144.961631584, -37.778214755 ], [144.961472896, -37.778195607500017 ], [144.96023376, -37.778044222000013 ], [144.959901472, -37.778005890000017 ], [144.95926096, -37.7779286155 ], [144.95809500800004, -37.777787812 ], [144.95645968000005, -37.777590398500017 ], [144.955125376, -37.7774292635 ], [144.954179936, -37.777315155500013 ], [144.953146624, -37.777190354500014 ], [144.95239769600005, -37.777099908000011 ], [144.95196732800005, -37.7770479785 ], [144.95166704000005, -37.7770116815 ], [144.95029632000006, -37.7768461435 ], [144.94965318399991, -37.776768147500015 ], [144.949433184, -37.776742173500011 ], [144.949404256, -37.77673832550002 ], [144.94879392, -37.775692335500018 ], [144.948893568, -37.775163513 ], [144.94897980800005, -37.774705952499914 ], [144.94914179199998, -37.7738449255 ], [144.94933219199999, -37.7728340115 ], [144.94956975999995, -37.7716172295 ], [144.94985497599996, -37.77015591450003 ], [144.94928608, -37.7700862065001 ], [144.94876704, -37.770022714500016 ], [144.948535936, -37.769994446500014 ], [144.948649568, -37.769368610000015 ], [144.948710176, -37.7690347775 ], [144.94886032, -37.768208105000014 ] ]
          }
        }
      }
    }
  }
}


____________________________________________________________________________________________________
QUERY A TWEET WHICH ONLY HAS THE PLACE FIELD POPULATED:
This query is used for querying tweets with the place field by term
The coordinate field must consider GeoJason notation: 1st point must be equal to the last one!
Relation explanation: http://www.elastic.co/guide/en/elasticsearch/guide/current/geo-shapes.html

{
  "query": {
    "filtered": {
      "query": {
        "match": {
          "text": {
            "query": "interviews",
            "operator": "or"
          }
        }
      },
      "filter": {
        "geo_shape":{  
          "place.bounding_box":{  
              "relation": "within", 
              "shape": {
                "type": "polygon",
                "coordinates": [[ 
                    [144.593741856, -38.433859306 ], 
                    [144.593741856, -37.5112737225 ], 
                    [145.512528832, -37.5112737225 ], 
                    [145.512528832, -38.433859306 ],
                    [144.593741856, -38.433859306 ]
                  ]]
              }
          }
       }
      }
    }
  }
}


____________________________________________________________________________________________________
QUERY A TWEET IN WHICH ITS POINT COORDINATES IS LOCATED WITHIN A POLYGON (SUBURB) OR ITS PLACE BOUNDING BOX FIELD IS WITHIN A POLYGON (SUBURB)
This is a combination of the two previous queries. Note the difference between querying 
Note: could be a type = polygon or multipolygon
See: http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-geo-shape-type.html

{
  "query": {
    "filtered": {
      "query": {
        "match": {
          "text": {
            "query": "interviews",
            "operator": "or"
          }
        }
      },
      "filter": {
        "or" : {
          "filters" : [
                {
                "geo_shape":{  
                    "place.bounding_box":{  
                        "relation": "within", 
                        "shape": {
                          "type": "polygon",
                          "coordinates": [[ 
                              [144.593741856, -38.433859306 ], 
                              [144.593741856, -37.5112737225 ], 
                              [145.512528832, -37.5112737225 ], 
                              [145.512528832, -38.433859306 ],
                              [144.593741856, -38.433859306 ]
                            ]]
                        }
                    }
                 }
                },
                {
                  "geo_polygon": {
                    "coordinates.coordinates": {
                      "points" : [ 
                              [144.593741856, -38.433859306 ], 
                              [144.593741856, -37.5112737225 ], 
                              [145.512528832, -37.5112737225 ], 
                              [145.512528832, -38.433859306 ],
                              [144.593741856, -38.433859306 ]
                            ]
                    }
                  }
                }
            ],
            "_cache" : true
        }
      }
    }
  },
  "size" : 1000
}

____________________________________________________________________________________________________
ADVANCED AND COMBINED QUERYING

{
  "query": {
    "filtered": {
      "query": { //THIS IS THE MAIN SEARCH BLOCK FOR ALL RESULTS
        "match": { 
          "title": { 
            "query": "[MAIN_SEARCH_TERM]", 
            "minimum_should_match": "75%"
          }
        }
      },
      "filter": {
        "bool": {
          "must": [
            {
              "range": { //THIS FILTERS BY DATES GRATER THAN [SOME_DATE]
                "date": {
                  "gte":"[SOME DATE]"
                }
              }
            },
            {
              "geo_distance": { //THIS FILTERS BY GEO POINTS WITHIN [DISTANCE] of [LATITUDE], [LONGITUDE]
                "distance": "[DISTANCE](mi, km)",
                "location": {
                  "lat":"[LATITUDE]",
                  "lon":"[LONGITUDE]"
                }
              }
            }
          ],
          "should": [
            {
              "query": { //THIS FILTERS BY ANOTHER [MATCH_TERM] AND ADDS BOOST TO THAT TERM, YOU CAN USE MULTIPLE OF THESE WITH DIFFERENT [BOOST_INT]
                "match": { 
                  "[PROPERTY]": {
                    "query": "[MATCH_TERM]",
                    "boost": [BOOST_INT]
                  }
                }
              }
            }
          ]
        }
      }
    }
  }
}


###########################   COUCHDB   ###############################

1. COUNT THE NUMBER OF DOCUMENTS WITH THE COORDINATES FIELD = NULL
#Search for null coordinates in couchdb view:
function(doc) {
  if (!doc.coordinates){
     emit(null, doc._id);
  }
}

2. FIND DIFFERENT NATIONALITIES
Map:
function(doc) {
  if (doc.user.lang) {
    emit([doc.user.lang], 1);
  }
}
Reduce: _sum

Same result with ELASTICSEARCH?

#User languages
{
  "size": 0,
  "query": {
    "query_string": {
      "analyze_wildcard": true,
      "query": "*"
    }
  },
  "aggs": {
    "2": {
      "terms": {
        "field": "user.lang",
        "size": 0,
        "order": {
          "_count": "desc"
        }
      }
    }
  }
}

#Tweet languages
{
  "size": 0,
  "query": {
    "query_string": {
      "analyze_wildcard": true,
      "query": "*"
    }
  },
  "aggs": {
    "2": {
      "terms": {
        "field": "lang",
        "size": 0,
        "order": {
          "_count": "desc"
        }
      }
    }
  }
}

#Sentiments
{
  "aggs": {
    "sentiment_analysis": {
      "terms": {
        "field": "sentiment",
        "size": 5
      }
    }
  }
}

#top 5 twitterers
{
  "size": 0,
  "query": {
    "query_string": {
      "analyze_wildcard": true,
      "query": "*"
    }
  },
  "aggs": {
    "2": {
      "terms": {
        "field": "user.screen_name",
        "size": 5,
        "order": {
          "_count": "desc"
        }
      }
    }
  }
}

#top 5 hashtags
{
  "size": 0,
  "query": {
    "query_string": {
      "analyze_wildcard": true,
      "query": "*"
    }
  },
  "aggs": {
    "2": {
      "terms": {
        "field": "entities.hashtags.text",
        "size": 5,
        "order": {
          "_count": "desc"
        }
      }
    }
  }
}

With filter:
http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-filter-aggregation.html
http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-filters-aggregation.html